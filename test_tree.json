{
  "projectName": "testdata",
  "projectGoal": "TODO: 请在此描述项目目标和主要功能",
  "techStack": [
    "Go",
    "JavaScript",
    "Python"
  ],
  "lastUpdated": "2025-10-07T17:45:31.3508876+08:00",
  "architecture": {
    "overview": "TODO: 请在此描述项目的整体架构",
    "moduleSummary": {
      "root": "包含 3 个文件，主要用于 TODO: 请描述此模块的用途"
    }
  },
  "files": {
    "example.go": {
      "purpose": "Greeter 是一个简单的问候器",
      "symbols": [
        {
          "prototype": "func NewGreeter(name string) *Greeter {\r\n\treturn \u0026Greeter{Name: name}\r\n}",
          "purpose": "",
          "range": [
            11,
            13
          ]
        },
        {
          "prototype": "func main() {\r\n\tgreeter := NewGreeter(\"CodeCartographer\")\r\n\tmessage := greeter.SayHello(\"World\")\r\n\tfmt.Println(message)\r\n}",
          "purpose": "",
          "range": [
            21,
            25
          ]
        },
        {
          "prototype": "func (g *Greeter) SayHello(person string) string {\r\n\treturn fmt.Sprintf(\"Hello %s, I'm %s!\", person, g.Name)\r\n}",
          "purpose": "",
          "range": [
            16,
            18
          ]
        },
        {
          "prototype": "type Greeter struct {\r\n\tName string\r\n}",
          "purpose": "",
          "range": [
            6,
            8
          ]
        }
      ],
      "lastModified": "2025-10-07T16:36:19+08:00",
      "fileSize": 541
    },
    "example.js": {
      "purpose": "用户管理模块",
      "symbols": [
        {
          "prototype": "user =\u003e user.id === id",
          "purpose": "",
          "range": [
            20,
            20
          ]
        },
        {
          "prototype": "(id, name, email) =\u003e {\r\n    return new User(id, name, email);\r\n}",
          "purpose": "",
          "range": [
            39,
            41
          ]
        },
        {
          "prototype": "class UserManager {\r\n    constructor() {\r\n        this.users = [];\r\n    }\r\n\r\n    // 添加用户\r\n    addUser(user) {\r\n        this.users.push(user);\r\n        return this.users.length;\r\n    }\r\n\r\n    // 获取所有用户\r\n    getUsers() {\r\n        return [...this.users];\r\n    }\r\n\r\n    // 根据ID查找用户\r\n    findUserById(id) {\r\n        return this.users.find(user =\u003e user.id === id);\r\n    }\r\n}",
          "purpose": "",
          "range": [
            2,
            22
          ]
        },
        {
          "prototype": "class User {\r\n    constructor(id, name, email) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.email = email;\r\n    }\r\n\r\n    // 获取用户信息\r\n    getInfo() {\r\n        return `${this.name} (${this.email})`;\r\n    }\r\n}",
          "purpose": "",
          "range": [
            25,
            36
          ]
        }
      ],
      "lastModified": "2025-10-07T16:36:17+08:00",
      "fileSize": 858
    },
    "example.py": {
      "purpose": "TODO: Describe the purpose of this file.",
      "symbols": [
        {
          "prototype": "def __init__(self):\r\n        \"\"\"初始化用户管理器\"\"\"\r\n        self.users = []",
          "purpose": "",
          "range": [
            10,
            12
          ]
        },
        {
          "prototype": "def add_user(self, user):\r\n        \"\"\"添加用户到管理器\r\n        \r\n        Args:\r\n            user: User 实例\r\n            \r\n        Returns:\r\n            int: 用户总数\r\n        \"\"\"\r\n        self.users.append(user)\r\n        return len(self.users)",
          "purpose": "",
          "range": [
            14,
            24
          ]
        },
        {
          "prototype": "def get_users(self):\r\n        \"\"\"获取所有用户\r\n        \r\n        Returns:\r\n            list: 用户列表\r\n        \"\"\"\r\n        return self.users.copy()",
          "purpose": "",
          "range": [
            26,
            32
          ]
        },
        {
          "prototype": "def find_user_by_id(self, user_id):\r\n        \"\"\"根据ID查找用户\r\n        \r\n        Args:\r\n            user_id: 用户ID\r\n            \r\n        Returns:\r\n            User or None: 找到的用户或None\r\n        \"\"\"\r\n        for user in self.users:\r\n            if user.id == user_id:\r\n                return user\r\n        return None",
          "purpose": "",
          "range": [
            34,
            46
          ]
        },
        {
          "prototype": "def __init__(self, user_id, name, email):\r\n        \"\"\"初始化用户\r\n        \r\n        Args:\r\n            user_id: 用户ID\r\n            name: 用户名\r\n            email: 邮箱地址\r\n        \"\"\"\r\n        self.id = user_id\r\n        self.name = name\r\n        self.email = email",
          "purpose": "",
          "range": [
            51,
            61
          ]
        },
        {
          "prototype": "def get_info(self):\r\n        \"\"\"获取用户信息\r\n        \r\n        Returns:\r\n            str: 用户信息字符串\r\n        \"\"\"\r\n        return f\"{self.name} ({self.email})\"",
          "purpose": "",
          "range": [
            63,
            69
          ]
        },
        {
          "prototype": "def create_user(user_id, name, email):\r\n    \"\"\"创建用户实例\r\n    \r\n    Args:\r\n        user_id: 用户ID\r\n        name: 用户名\r\n        email: 邮箱地址\r\n        \r\n    Returns:\r\n        User: 用户实例\r\n    \"\"\"\r\n    return User(user_id, name, email)",
          "purpose": "",
          "range": [
            71,
            82
          ]
        },
        {
          "prototype": "class UserManager:\r\n    \"\"\"用户管理器类\"\"\"\r\n    \r\n    def __init__(self):\r\n        \"\"\"初始化用户管理器\"\"\"\r\n        self.users = []\r\n    \r\n    def add_user(self, user):\r\n        \"\"\"添加用户到管理器\r\n        \r\n        Args:\r\n            user: User 实例\r\n            \r\n        Returns:\r\n            int: 用户总数\r\n        \"\"\"\r\n        self.users.append(user)\r\n        return len(self.users)\r\n    \r\n    def get_users(self):\r\n        \"\"\"获取所有用户\r\n        \r\n        Returns:\r\n            list: 用户列表\r\n        \"\"\"\r\n        return self.users.copy()\r\n    \r\n    def find_user_by_id(self, user_id):\r\n        \"\"\"根据ID查找用户\r\n        \r\n        Args:\r\n            user_id: 用户ID\r\n            \r\n        Returns:\r\n            User or None: 找到的用户或None\r\n        \"\"\"\r\n        for user in self.users:\r\n            if user.id == user_id:\r\n                return user\r\n        return None",
          "purpose": "",
          "range": [
            7,
            46
          ]
        },
        {
          "prototype": "class User:\r\n    \"\"\"用户类\"\"\"\r\n    \r\n    def __init__(self, user_id, name, email):\r\n        \"\"\"初始化用户\r\n        \r\n        Args:\r\n            user_id: 用户ID\r\n            name: 用户名\r\n            email: 邮箱地址\r\n        \"\"\"\r\n        self.id = user_id\r\n        self.name = name\r\n        self.email = email\r\n    \r\n    def get_info(self):\r\n        \"\"\"获取用户信息\r\n        \r\n        Returns:\r\n            str: 用户信息字符串\r\n        \"\"\"\r\n        return f\"{self.name} ({self.email})\"",
          "purpose": "",
          "range": [
            48,
            69
          ]
        },
        {
          "prototype": "self.users = []",
          "purpose": "",
          "range": [
            12,
            12
          ]
        },
        {
          "prototype": "self.id = user_id",
          "purpose": "",
          "range": [
            59,
            59
          ]
        },
        {
          "prototype": "self.name = name",
          "purpose": "",
          "range": [
            60,
            60
          ]
        },
        {
          "prototype": "self.email = email",
          "purpose": "",
          "range": [
            61,
            61
          ]
        }
      ],
      "lastModified": "2025-10-07T16:36:17+08:00",
      "fileSize": 1823
    }
  }
}