{
  "projectName": "testdata",
  "projectGoal": "TODO: 请在此描述项目目标和主要功能",
  "techStack": [
    "Go",
    "JavaScript",
    "Python"
  ],
  "lastUpdated": "2025-10-07T18:01:17.7735643+08:00",
  "architecture": {
    "overview": "TODO: 请在此描述项目的整体架构",
    "moduleSummary": {
      "root": "包含 3 个文件，主要用于 TODO: 请描述此模块的用途"
    }
  },
  "files": {
    "example.go": {
      "purpose": "TODO: Describe the purpose of this file.",
      "symbols": [
        {
          "prototype": "func NewGreeter(name string) *Greeter",
          "purpose": "",
          "range": [
            44,
            46
          ]
        },
        {
          "prototype": "func ProcessUserData(\r\n\tuserID int,\r\n\tuserName string,\r\n\temail string,\r\n\tage int,\r\n\tisActive bool,\r\n\tpreferences map[string]interface:",
          "purpose": "",
          "range": [
            54,
            84
          ]
        },
        {
          "prototype": "func CreateComplexStruct(\r\n\tconfig Config,\r\n\toptions Options,\r\n\thandlers []Handler,\r\n\ttimeout int,\r\n\tretries int,\r\n\tdebug bool,\r\n) (*ComplexStruct, error)",
          "purpose": "",
          "range": [
            87,
            116
          ]
        },
        {
          "prototype": "func main()",
          "purpose": "",
          "range": [
            119,
            177
          ]
        },
        {
          "prototype": "func (g *Greeter) SayHello(person string) string",
          "purpose": "",
          "range": [
            49,
            51
          ]
        },
        {
          "prototype": "type Greeter struct",
          "purpose": "",
          "range": [
            9,
            11
          ]
        },
        {
          "prototype": "type Config struct",
          "purpose": "",
          "range": [
            14,
            18
          ]
        },
        {
          "prototype": "type Options struct",
          "purpose": "",
          "range": [
            21,
            25
          ]
        },
        {
          "prototype": "type Handler interface",
          "purpose": "",
          "range": [
            28,
            30
          ]
        },
        {
          "prototype": "type ComplexStruct struct",
          "purpose": "",
          "range": [
            33,
            41
          ]
        }
      ],
      "lastModified": "2025-10-07T17:49:56+08:00",
      "fileSize": 3570
    },
    "example.js": {
      "purpose": "用户管理模块",
      "symbols": [
        {
          "prototype": "user =\u003e user.id === id",
          "purpose": "",
          "range": [
            20,
            20
          ]
        },
        {
          "prototype": "(id, name, email) =\u003e",
          "purpose": "",
          "range": [
            39,
            41
          ]
        },
        {
          "prototype": "class UserManager",
          "purpose": "",
          "range": [
            2,
            22
          ]
        },
        {
          "prototype": "class User",
          "purpose": "",
          "range": [
            25,
            36
          ]
        }
      ],
      "lastModified": "2025-10-07T16:36:17+08:00",
      "fileSize": 858
    },
    "example.py": {
      "purpose": "TODO: Describe the purpose of this file.",
      "symbols": [
        {
          "prototype": "def __init__(self)::",
          "purpose": "",
          "range": [
            10,
            12
          ]
        },
        {
          "prototype": "def add_user(self, user)::",
          "purpose": "",
          "range": [
            14,
            24
          ]
        },
        {
          "prototype": "def get_users(self)::",
          "purpose": "",
          "range": [
            26,
            32
          ]
        },
        {
          "prototype": "def find_user_by_id(self, user_id)::",
          "purpose": "",
          "range": [
            34,
            46
          ]
        },
        {
          "prototype": "def __init__(self, user_id, name, email)::",
          "purpose": "",
          "range": [
            51,
            61
          ]
        },
        {
          "prototype": "def get_info(self):\r\n        \"\"\"获取用户信息\r\n        \r\n        Returns:\r\n            str: 用户信息字符串\r\n        \"\"\"\r\n        return f\":",
          "purpose": "",
          "range": [
            63,
            69
          ]
        },
        {
          "prototype": "def create_user(user_id, name, email)::",
          "purpose": "",
          "range": [
            71,
            82
          ]
        },
        {
          "prototype": "class UserManager::",
          "purpose": "",
          "range": [
            7,
            46
          ]
        },
        {
          "prototype": "class User:\r\n    \"\"\"用户类\"\"\"\r\n    \r\n    def __init__(self, user_id, name, email):\r\n        \"\"\"初始化用户\r\n        \r\n        Args:\r\n            user_id: 用户ID\r\n            name: 用户名\r\n            email: 邮箱地址\r\n        \"\"\"\r\n        self.id = user_id\r\n        self.name = name\r\n        self.email = email\r\n    \r\n    def get_info(self):\r\n        \"\"\"获取用户信息\r\n        \r\n        Returns:\r\n            str: 用户信息字符串\r\n        \"\"\"\r\n        return f\":",
          "purpose": "",
          "range": [
            48,
            69
          ]
        },
        {
          "prototype": "self.users = []",
          "purpose": "",
          "range": [
            12,
            12
          ]
        },
        {
          "prototype": "self.id = user_id",
          "purpose": "",
          "range": [
            59,
            59
          ]
        },
        {
          "prototype": "self.name = name",
          "purpose": "",
          "range": [
            60,
            60
          ]
        },
        {
          "prototype": "self.email = email",
          "purpose": "",
          "range": [
            61,
            61
          ]
        }
      ],
      "lastModified": "2025-10-07T16:36:17+08:00",
      "fileSize": 1823
    }
  }
}